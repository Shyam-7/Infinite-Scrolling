{"ast":null,"code":"var _jsxFileName = \"G:\\\\a_college_edu\\\\Sem_7\\\\FSD\\\\Assignment1\\\\infinite-scrolling\\\\src\\\\components\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { fetchPosts } from '../services/api';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const loadPosts = async () => {\n    const newPosts = await fetchPosts(page);\n    if (newPosts.length === 0) {\n      setHasMore(false);\n    } else {\n      setPosts(prevPosts => [...prevPosts, ...newPosts]);\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n  useEffect(() => {\n    loadPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Social Media Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: posts.length,\n      next: loadPosts,\n      hasMore: hasMore,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No more posts to show.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this),\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        body: post.body\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"Q+Sbk1Xhypju3I3NjCvPsFx8o9I=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","InfiniteScroll","fetchPosts","Post","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","page","setPage","hasMore","setHasMore","loadPosts","newPosts","length","prevPosts","prevPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","loader","endMessage","map","post","title","body","id","_c","$RefreshReg$"],"sources":["G:/a_college_edu/Sem_7/FSD/Assignment1/infinite-scrolling/src/components/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { fetchPosts } from '../services/api';\r\nimport Post from './Post';\r\n\r\nconst Feed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const loadPosts = async () => {\r\n    const newPosts = await fetchPosts(page);\r\n    if (newPosts.length === 0) {\r\n      setHasMore(false);\r\n    } else {\r\n      setPosts(prevPosts => [...prevPosts, ...newPosts]);\r\n      setPage(prevPage => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <h1>Social Media Feed</h1>\r\n      <InfiniteScroll\r\n        dataLength={posts.length}\r\n        next={loadPosts}\r\n        hasMore={hasMore}\r\n        loader={<h4>Loading...</h4>}\r\n        endMessage={<p>No more posts to show.</p>}\r\n      >\r\n        {posts.map(post => (\r\n          <Post key={post.id} title={post.title} body={post.body} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMb,UAAU,CAACQ,IAAI,CAAC;IACvC,IAAIK,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACzBH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLJ,QAAQ,CAACQ,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGF,QAAQ,CAAC,CAAC;MAClDJ,OAAO,CAACO,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA,CAACJ,cAAc;MACbwB,UAAU,EAAEjB,KAAK,CAACQ,MAAO;MACzBU,IAAI,EAAEZ,SAAU;MAChBF,OAAO,EAAEA,OAAQ;MACjBe,MAAM,eAAEtB,OAAA;QAAAe,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAE;MAC5BI,UAAU,eAAEvB,OAAA;QAAAe,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAJ,QAAA,EAEzCZ,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACbzB,OAAA,CAACF,IAAI;QAAe4B,KAAK,EAAED,IAAI,CAACC,KAAM;QAACC,IAAI,EAAEF,IAAI,CAACE;MAAK,GAA5CF,IAAI,CAACG,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}